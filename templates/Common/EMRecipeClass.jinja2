{% from "Common/Macros.cs.jinja2" import locName %}
{% block recipeClass %}
    {% set recipeClassName = recipe.name + "Recipe" %}
    {% if recipe.skills %}
        {% for skill, level in recipe.skills.items() %}
    [RequiresSkill(typeof({{ skill }}Skill), {{ level }})]
        {% endfor %}
    {% endif %}
    public partial class {{ recipeClassName }} : RecipeFamily, IConfigurableRecipe
    {
        static RecipeDefaultModel Defaults => new()
        {
            ModelType = typeof(Recipe).Name,
            Assembly = typeof(Recipe).AssemblyQualifiedName,
            HiddenName = {{ item.name }},
            LocalizableName = Localizer.DoStr("{{ locName }}"),
            IngredientList = new()
            {
                {% for ingredient in recipe.ingredients %}
                    {% set static = "true" if ingredient.static else "" %}
                    {% if ingredient.tag %}
                new EMIngredient("{{ ingredient.tag }}", true, {{ ingredient.count }}, {{ static }}),
                    {% elif ingredient.itemClass %}
                new EMIngredient("{{ ingredient.item }}Item", false, {{ ingredient.count }}, {{ static }}),
                    {% else %}
                new EMIngredient("{{ ingredient.item }}Item", false, {{ ingredient.count }}, {{ static }}),
                    {% endif %}
                {% endfor %}
            },
            ProductList = new()
            {
                {% set products = recipe.products %}
                {% for product in products %}
                new EMProduct("{{ product.itemClass or ("{0}Item".format(product.item)) }}", {{ product.count }}),
                {% endfor %}
            },
            BaseExperienceOnCraft = 1,
            BaseLabor = {{ recipe.laborInCalories | default(20) }},
            LaborIsStatic = false,
            BaseCraftTime = {{ recipe.craftTimeMinutes | default("0.5f") }},
            CraftTimeIsStatic = false,
            CraftingStation = {{ recipe.craftingObject }}Object,
            RequiredSkillType = typeof(Skill),
            RequiredSkillLevel = 4,
            IngredientImprovementTalents = typeof(LavishResourcesTalent),
            SpeedImprovementTalents = new Type[] { typeof(ParallelSpeedTalent), typeof(FocusedSpeedTalent) },
        };

        static Recipe() { EMRecipeResolver.AddDefaults(Defaults); }

        public Recipe()
        {
            this.Recipes = EMRecipeResolver.Obj.ResolveRecipe(this);
            this.LaborInCalories = EMRecipeResolver.Obj.ResolveLabor(this);
            this.CraftMinutes = EMRecipeResolver.Obj.ResolveCraftMinutes(this);
            this.ExperienceOnCraft = EMRecipeResolver.Obj.ResolveExperience(this);
            this.Initialize(Defaults.LocalizableName, GetType());
            CraftingComponent.AddRecipe(EMRecipeResolver.Obj.ResolveStation(this), this);
        }

        /// <summary>Hook for mods to customize RecipeFamily before initialization. You can change recipes, xp, labor, time here.</summary>
        partial void ModsPreInitialize();
        /// <summary>Hook for mods to customize RecipeFamily after initialization, but before registration. You can change skill requirements here.</summary>
        partial void ModsPostInitialize();
    }
{% endblock recipeClass %}