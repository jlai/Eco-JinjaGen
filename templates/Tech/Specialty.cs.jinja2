{% from "Common/Macros.cs.jinja2" import locName %}
// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;
    using Eco.Core.Items;
    using Eco.Core.Utils;
    using Eco.Core.Utils.AtomicAction;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Property;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Services;
    using Eco.Shared.Utils;
    using Gameplay.Systems.Tooltip;

    [Serialized]
    [LocDisplayName("{{ locName(item) }}")]
    [Ecopedia("Professions", "{{ item.professionLocName or item.profession }}", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    [RequiresSkill(typeof({{ item.profession }}Skill), 0), Tag("{{ item.professionLocName or item.profession }} Specialty"), Tier(3)]
    [Tag("Specialty")]
    [Tag("Teachable")]
    public partial class {{ item.name }}Skill : Skill
    {
        public override LocString DisplayDescription { get { return Localizer.DoStr("{{ item.description }}"); } }

        public override void OnLevelUp(User user)
        {
            user.Skillset.AddExperience(typeof(SelfImprovementSkill), 20, Localizer.DoStr("for leveling up another specialization."));
        }

        public static MultiplicativeStrategy MultiplicativeStrategy =
            new MultiplicativeStrategy(new float[] { 
                1,
                1 - 0.5f,
                1 - 0.55f,
                1 - 0.6f,
                1 - 0.65f,
                1 - 0.7f,
                1 - 0.75f,
                1 - 0.8f,
            });
        public override MultiplicativeStrategy MultiStrategy => MultiplicativeStrategy;

        public static AdditiveStrategy AdditiveStrategy =
            new AdditiveStrategy(new float[] { 
                0,
                0.5f,
                0.55f,
                0.6f,
                0.65f,
                0.7f,
                0.75f,
                0.8f,
            });
        public override AdditiveStrategy AddStrategy => AdditiveStrategy;
        public override int MaxLevel { get { return 7; } }
        public override int Tier { get { return 3; } }
    }

    {% block skillBook %}
    [Serialized]
    [LocDisplayName("{{ locName(item) }} Skill Book")]
    [Ecopedia("Items", "Skill Books", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    public partial class {{ item.name }}SkillBook : SkillBook<{{ item.name }}Skill, {{ item.name }}SkillScroll> {}
    {% endblock skillBook %}

    {% block skillScroll %}
    [Serialized]
    [LocDisplayName("{{ locName(item) }} Skill Scroll")]
    public partial class {{ item.name }}SkillScroll : SkillScroll<{{ item.name }}Skill, {{ item.name }}SkillBook> {}
    {% endblock skillScroll %}

    {% block recipe %}
    {% if item.recipe %}
    {% set recipe = item.recipe | defaults(name=item.name, products=[{"object": item.name + "SkillBook"}]) %}
        {% include "Common/RecipeClass.jinja2" %}
    {% endif %}
    {% endblock recipe +%}
}
